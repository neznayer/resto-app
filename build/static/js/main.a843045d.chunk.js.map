{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/pages/item-page.js","components/app-header/index.js","components/app-header/app-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js","services/resto-service.js"],"names":["module","exports","MenuListItem","menuItem","onAddToCart","title","price","url","category","className","to","id","src","alt","icon","faDrumstickBite","faSeedling","faPizzaSlice","iconSelector","onClick","e","preventDefault","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","Consumer","RestoService","menuLoaded","newMenu","type","payload","menuRequested","menuError","Spinner","Error","MenuList","this","getMenuItems","then","res","catch","menuItems","loading","error","addedToCart","items","map","key","Component","mapDispatch2Props","View","connect","state","menu","MainPage","mapDispatchToProps","deleteFromCart","CartTable","i","count","flags","unique_list","l","length","push","item","CartPage","ItemPage","match","params","find","el","loagding","AppHeader","total","cartIcon","App","style","background","Background","path","component","exact","ErrorBoundry","setState","children","initialState","reducer","action","newItem","ind","itemIndex","findIndex","slice","store","createStore","restoService","_apiBase","getResource","a","fetch","response","ok","status","json","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.a843045d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import React from \"react\";\nimport \"./menu-list-item.scss\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPizzaSlice,\n    faSeedling,\n    faDrumstickBite,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst iconSelector = (category) => {\n    switch (category) {\n        case \"meat\":\n            return <FontAwesomeIcon icon={faDrumstickBite} />;\n        case \"salads\":\n            return <FontAwesomeIcon icon={faSeedling} />;\n        case \"pizza\":\n            return <FontAwesomeIcon icon={faPizzaSlice} />;\n        default:\n            return category;\n    }\n};\n\nconst MenuListItem = ({ menuItem, onAddToCart }) => {\n    const { title, price, url, category } = menuItem;\n    return (\n        <li className=\"menu__item\">\n            <Link to={`/${menuItem.id}`}>\n                <div className=\"menu__title\">{title}</div>\n                <img className=\"menu__img\" src={url} alt={title}></img>\n                <div className=\"menu__category\">\n                    Category: \n                    <span>\n                        {iconSelector(category)}\n                        {category}\n                    </span>\n                </div>\n                <div className=\"menu__price\">\n                    Price: <span>{price}$</span>\n                </div>\n                </Link>\n                <button onClick={(e)=> {\n                    e.preventDefault();\n                    onAddToCart();\n                    \n                    }} className=\"menu__btn\">Add to cart</button>\n            \n        </li>\n    );\n};\n\nexport default MenuListItem;\n","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService)=>{\n                        return <Wrapped {...props} RestoService={RestoService}/>\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    };\n};\n\nexport default WithRestoService;","const menuLoaded = (newMenu) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    };\r\n};\r\n\r\nconst menuRequested = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED',\r\n        \r\n    };\r\n};\r\n\r\nconst menuError = () => {\r\n    return {\r\n        type: 'MENU_ERROR'\r\n    }\r\n}\r\n\r\n\r\nconst addedToCart = (id) => {\r\n    \r\n    return {\r\n        type: 'ITEM_ADDED_TO_CART',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst deleteFromCart = (id) => {\r\n    \r\n    return {\r\n        type:'ITEM_REMOVED_FROM_CART',\r\n        payload: id\r\n    }\r\n}\r\nexport {\r\n    menuLoaded,\r\n    menuRequested,\r\n    menuError,\r\n    addedToCart,\r\n    deleteFromCart\r\n};","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\n\nconst Spinner = () => {\n    return <div className=\"spinner\">loading...</div>\n}\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React, {Component} from 'react';\nimport MenuListItem from '../menu-list-item';\nimport {connect} from 'react-redux';\nimport './menu-list.scss';\nimport WithRestoService from '../hoc';\nimport {menuLoaded, menuRequested, menuError, addedToCart} from '../../actions';\nimport Spinner from '../spinner';\nimport Error from '../error';\n\nclass MenuList extends Component { // kogda tolko Mounted, On chitaet menu s Servera (RestoService), i zapisyvaet ih v state s pomoshyu action menuLoaded\n    \n    componentDidMount() {\n        this.props.menuRequested();\n        const {RestoService} = this.props; //vytaskivaem service iz props\n\n        RestoService.getMenuItems() //poluchaem menu s servera\n        .then(res => {this.props.menuLoaded(res);}) //poluchennoe menu zasovivaem v state\n        .catch(() =>{this.props.menuError();}); \n    }\n\n    render() {\n        const {menuItems, loading, error, addedToCart} = this.props;\n        \n        if (loading) {\n            return <Spinner/>\n        }\n        if (error) {\n            return <Error/>\n        }\n\n        const items = menuItems.map(menuItem => {\n            return (<MenuListItem \n            key={menuItem.id} \n            menuItem={menuItem}\n            onAddToCart={()=>addedToCart(menuItem.id)}/>)\n        });\n\n        return (\n            <View items={items}/>\n        )\n        \n        \n    }\n};\n\nconst mapState2Props = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error,\n        items: state.items\n    }\n}\n\nconst mapDispatch2Props = {\n        menuLoaded,\n        menuRequested,\n        menuError,\n        addedToCart\n}\n\nconst View = ({items})=> {\n    return(\n        <ul className=\"menu__list\">\n            {items}\n        </ul>\n    )\n}\n\nexport default WithRestoService()(connect(mapState2Props,mapDispatch2Props)(MenuList));","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from 'react-redux';\nimport {deleteFromCart} from '../../actions';\n\nconst CartTable = ({items,deleteFromCart}) => {\n    \n\n    const count = {};\n    let flags = [],  unique_list = [], l = items.length, i;\n    for (i=0; i<l; i++) {\n        count[items[i].id] = (count[items[i].id]||0) + 1;\n        if (flags[items[i].id]) {\n            continue\n        };\n        flags[items[i].id] = true;\n        unique_list.push(items[i])\n    };\n    \n    return (\n        <>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                {\n                    unique_list.map(item => {\n                        \n\n                        const { title, price, url, id} = item;\n\n\n                        return (\n                            <div key = {id} className=\"cart__item\">\n                            <img src={url} className=\"cart__item-img\" alt={title}></img>\n                            <div className=\"cart__item-title\">{title}</div>\n                        <div className=\"cart__item-price\">{price}$ x {count[id]}</div>\n                            <div className=\"cart__close\" onClick={() => deleteFromCart(id)}>&times;</div>\n                        </div>\n                        )\n                    })\n                }\n\n            </div>\n        </>\n        );\n}\n\n\nconst mapStateToProps = ({items}) => { \n    \n    return { \n        items\n    }\n};\n\nconst mapDispatchToProps = {\n    \n        deleteFromCart\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable />\n        </div>\n    )\n}\n\nexport default CartPage;","import React from \"react\";\r\nimport WithRestoService from \"../hoc\";\r\nimport { connect } from \"react-redux\";\r\nimport { menuLoaded, menuRequested, menuError } from \"../../actions\";\r\nimport Spinner from \"../spinner\";\r\nimport Error from \"../error\";\r\n\r\nimport \"./item-page.css\";\r\n\r\nclass ItemPage extends React.Component {\r\n    componentDidMount() {\r\n        const { RestoService } = this.props;\r\n        RestoService.getMenuItems()\r\n            .then((res) => this.props.menuLoaded(res))\r\n            .catch(() => this.props.menuError());\r\n    }\r\n\r\n    render() {\r\n        if (this.props.error) {\r\n            return (\r\n                <div className=\"item-page\">\r\n                    <Error />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.props.loading) {\r\n            return (\r\n                <div className=\"item-page\">\r\n                    <Spinner />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const id = +this.props.match.params.id;\r\n        const item = this.props.menuItems.find((el) => +el.id === id);\r\n        const { title, category, price, url } = item;\r\n\r\n        return (\r\n            <div className=\"item-page\">\r\n                <div className=\"menu__item item-block\">\r\n                    <div className=\"menu-title\">{title}</div>\r\n                    <img className=\"menu__Img\" src = {`${url}`} alt = {`${title}`}></img>\r\n                    <div className=\"menu__price\"> {price} </div>\r\n                    <div className=\"menu__category\"> {category} </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuItems: state.menu,\r\n        loagding: state.loading,\r\n        error: state.error,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    menuLoaded,\r\n    menuRequested,\r\n    menuError,\r\n};\r\n\r\nexport default WithRestoService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(ItemPage)\r\n);\r\n","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport './app-header.scss';\nimport {Link} from 'react-router-dom';\n\nconst AppHeader = ({total}) => {\n    return (\n        <header className=\"header\">\n            <Link className=\"header__link\" to=\"/\">\n                Menu\n            </Link>\n            <Link to=\"/cart\" className = \"header__link\">\n            \n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {total} $\n            </Link>\n        </header>\n    )\n};\n\nexport default AppHeader;","import App from './app';\n\nexport default App;","import React from 'react';\nimport {MainPage, CartPage, ItemPage} from '../pages';\nimport AppHeader from '../app-header';\n\nimport Background from './food-bg.jpg';\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n    \n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n            <AppHeader total={50}/>\n            <Switch>\n                <Route\n                    path='/'\n                    component={MainPage}\n                    exact/>\n                <Route\n                    path='/cart'\n                    component={CartPage}\n                    />\n                <Route\n                    path='/:id'\n                    component={ItemPage} //item page poluchaet props.match.param.id iz /:id\n                    />\n                \n            </Switch>\n        </div>\n    )\n}\n\nexport default App;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n    \n    state = {\n        error: false\n    }\n\n    componentDidCatch(){\n        this.setState({error:true});\n    }\n\n    render() {\n       if (this.state.error) {\n           return <Error/>\n       }\n\n        return this.props.children;\n    }\n}","const initialState = {\r\n    menu: [],\r\n    loading: true,\r\n    error: false,\r\n    items: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case \"MENU_LOADED\":\r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n                loading: false,\r\n                error: false\r\n            };\r\n        case \"MENU_REQUESTED\":\r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: true,\r\n                error: false\r\n            };\r\n        case \"MENU_ERROR\":\r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: false,\r\n                error: true\r\n            }; \r\n        case \"ITEM_ADDED_TO_CART\":\r\n            const id = action.payload;\r\n            const item = state.menu.find(item => item.id === id);\r\n            const newItem = {\r\n                title: item.title,\r\n                price: item.price,\r\n                url: item.url,\r\n                id: item.id\r\n                    };\r\n\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    newItem\r\n                ]\r\n            };\r\n\r\n\r\n        case \"ITEM_REMOVED_FROM_CART\":\r\n            const ind = action.payload;\r\n            const itemIndex = state.items.findIndex(item => item.id === ind);\r\n            return{\r\n                ...state,\r\n                items: [\r\n                    ...state.items.slice(0, itemIndex),\r\n                    ...state.items.slice(itemIndex+1)\r\n                ]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {Provider} from 'react-redux';\nimport {HashRouter as Router} from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context';\nimport store from './store';\n\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}> \n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root'));\n\n","export default class RestoService {\r\n  \r\n   _apiBase = 'http://localhost:3000';\r\n\r\n\r\n getResource = async (url) => {\r\n  const response = await fetch(`${this._apiBase}${url}`);\r\n  if (!response.ok) {\r\n    throw new Error(`Could not fetch ${url}` + \r\n    `, recieved ${response.status}`);\r\n  }\r\n  \r\n  return await response.json();\r\n }\r\n\r\n  getMenuItems = async () => {\r\n    return await this.getResource(`/menu/`);\r\n\r\n  };\r\n}\r\n"],"sourceRoot":""}